**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: yelotv.be
* @MinSWversion: V1.1.1/52
* @Revision 2 - [19/11/2013] Francis De Paemeleere
* adjust to site changes
* @Revision 1 - [16/11/2013] Francis De Paemeleere
* add sorting of shows (sometimes shows were not chronological ordered)
* @Revision 0 - [06/08/2013] Francis De Paemeleere
* - creation
* @Remarks:
* - this siteini uses cookies (see yelotv.be_info.txt for more info)
* @header_end
**------------------------------------------------------------------------------------------------
*
site {url=yelotv.be|timezone=UTC+01:00|maxdays=14|cultureinfo=nl-BE|charset=UTF-8|titlematchfactor=90}
site {keepindexpage|episodesystem=xmltv_ns}
site {loadcookie=yelotv.be_cookies.txt}

url_index{url()|http://yelotv.be/tvgids/loadepg}
url_index.headers {method=POST|contenttype=application/x-www-form-urlencoded}
url_index.headers {customheader=X-Requested-With=XMLHttpRequest}
url_index.headers {postdata=date='urldate'&group=alles&offset=0&limit=300}
urldate.format {datestring|dd-MM-yyyy}
index_variable_element.modify {remove()|'index_variable_element'}
index_variable_element.modify {addstart()|'config_site_id'}
index_showsplit.scrub {multi(include="\"code\":\"'index_variable_element')|"pvrbroadcasts"|{"event_id"|}|}

scope.range {(splitindex)|end}
index_showsplit.modify {sort(ascending,string)}
sort_by.scrub {single(target="index_showsplit")|"start_time":||,|,}
sort_by.modify {calculate(target="index_showsplit" format=date,unix)}
end_scope

index_urlshow {url()|http://yelotv.be/overlay/broadcast?id=|:"||"|"}
**http://yelotv.be/overlay/broadcast?id=16623998
index_urlshow.headers {method=POST|contenttype=application/x-www-form-urlencoded}
index_urlshow.headers {customheader=X-Requested-With=XMLHttpRequest}

index_start.scrub {single()|"start_time":||,|,}
index_stop.scrub {single()|"end_time":||,|,}
index_title.scrub {single()|"title":"||"|"} 

scope.range{(indexshowdetails)|end}
index_start.modify {calculate(format=utctime)}
index_stop.modify {calculate(format=utctime)}
index_title.modify {cleanup}
end_scope

title.scrub {single()|<div class=\"titleWrap\">|<span itemprop=\"name\">|<\/span>|<\/div>}
description.scrub {multi|itemprop=\"description\">|<p>|<\/p>|<\/section>} 
showicon.scrub {single(exclude="\/channels\/square\/")|<div class=\"graphic\">|src=\"|\"|<\/div>}

scope.range{(showdetails)|end}
title.modify {cleanup}
showicon.modify {replace|\/|/}
description.modify {replace|\/|/}
description.modify {replace|\\"|"}
description.modify {cleanup}
temp_1.modify {substring(type=regex)|'description' "\(jg ([0-9]*)/afl (?:[0-9]*)\)"}  * season from season/episode
temp_2.modify {substring(type=regex)|'description' "\(jg (?:[0-9]*)/afl ([0-9]*)\)"}  * episode from season/episode
temp_1.modify {substring( 'temp_1'="" type=regex)|'description' "\(jg ([0-9]*)\)"}    * season only
temp_2.modify {substring( 'temp_2'="" type=regex)|'description' "\(afl ([0-9]*)\)"}   * episode only
description.modify {remove|(jg 'temp_1'/afl 'temp_2')}   * remove any episode info from the description
description.modify {remove|(jg 'temp_1')}                * remove any episode info from the description
description.modify {remove|(afl 'temp_2')}               * remove any episode info from the description
temp_1.modify {calculate(not="" format=F0)|1 -}
temp_2.modify {calculate(not="" format=F0)|1 -}
episode.modify {addend('temp_1'not="")|'temp_1'}
episode.modify {addend|.}
episode.modify {addend('temp_2'not="")|'temp_2'}
episode.modify {addend|.}
episode.modify {clear(="..")} * remove episode info if none is available

subtitle.modify {substring(type=regex)|'description' "^ *\"(.*?)\".*"}
description.modify {remove|"'subtitle'"}                                       * remove any subtitle the description
end_scope

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*
*index_site_id.scrub {multi|src=\"http:\/\/ps.yelo.prd.telenet-ops.be\/YeloVaria\/||_|_}
*index_site_channel.scrub {multi|src=\"http:\/\/ps.yelo.prd.telenet-ops.be\/YeloVaria\/|alt=\"|\"|/>}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*index_site_channel.modify {cleanup}
*end_scope
** @auto_xml_channel_end